defaults: &defaults
  working_directory: /go/src/github.com/nmiyake/go-docker-images
  docker:
    - image: nmiyake/go:go-1.9-docker-17.03.0-ce-t115

custom-build-num: &custom-build-num
  run: echo "export CUSTOM_BUILD_NUM=$(($(git rev-list --count HEAD)+80))" >> $BASH_ENV

run-docker-gen: &run-docker-gen
  run: go run ./vendor/github.com/nmiyake/dockergen/main.go --config config.yml build $IMAGE

docker-save: &docker-save
  run: |
       mkdir -p /tmp/docker-cache
       docker save -o /tmp/docker-cache/docker-images.tar $(go run ./vendor/github.com/nmiyake/dockergen/main.go --config config.yml tags $IMAGE)

create-cache-key: &create-cache-key
  run: echo "$IMAGE-$CIRCLE_SHA1" > /tmp/$IMAGE-cache_key.txt

docker-load: &docker-load
  run: docker load -i /tmp/docker-cache/docker-images.tar

docker-publish: &docker-publish
  run: |
       docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
       go run ./vendor/github.com/nmiyake/dockergen/main.go --config config.yml --no-deps push $IMAGE

version: 2
jobs:
  alpine-go:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=alpine-go' >> $BASH_ENV
      - *custom-build-num
      - *run-docker-gen
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/alpine-go-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  alpine-go-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=alpine-go' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/alpine-go-cache_key.txt" }}
      - *docker-load
      - *docker-publish

  brew-go:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=brew-go' >> $BASH_ENV
      - *custom-build-num
      - *run-docker-gen
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/brew-go-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  brew-go-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=brew-go' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/brew-go-cache_key.txt" }}
      - *docker-load
      - *docker-publish

  go-darwin-linux:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-darwin-linux' >> $BASH_ENV
      - *custom-build-num
      - *run-docker-gen
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/go-darwin-linux-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  go-darwin-linux-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-darwin-linux' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-cache_key.txt" }}
      - *docker-load
      - *docker-publish

  go-darwin-linux-docker-bsdtar-unzip:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo "go-darwin-linux-$CIRCLE_SHA1" > /tmp/go-darwin-linux-cache_key.txt
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-cache_key.txt" }}
      - *docker-load
      - run: echo 'export IMAGE=go-darwin-linux-docker-bsdtar-unzip' >> $BASH_ENV
      - *custom-build-num
      - run: go run ./vendor/github.com/nmiyake/dockergen/main.go --config config.yml --no-deps build $IMAGE
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/go-darwin-linux-docker-bsdtar-unzip-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  go-darwin-linux-docker-bsdtar-unzip-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-darwin-linux-docker-bsdtar-unzip' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-docker-bsdtar-unzip-cache_key.txt" }}
      - *docker-load
      - *docker-publish

  go-darwin-linux-docker-java-ruby-netcat:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo "go-darwin-linux-$CIRCLE_SHA1" > /tmp/go-darwin-linux-cache_key.txt
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-cache_key.txt" }}
      - *docker-load
      - run: echo 'export IMAGE=go-darwin-linux-docker-java-ruby-netcat' >> $BASH_ENV
      - *custom-build-num
      - run: go run ./vendor/github.com/nmiyake/dockergen/main.go --config config.yml --no-deps build $IMAGE
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/go-darwin-linux-docker-java-ruby-netcat-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  go-darwin-linux-docker-java-ruby-netcat-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-darwin-linux-docker-java-ruby-netcat' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-docker-java-ruby-netcat-cache_key.txt" }}
      - *docker-load
      - *docker-publish

  go-darwin-linux-no-cgo:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-darwin-linux-no-cgo' >> $BASH_ENV
      - *custom-build-num
      - *run-docker-gen
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/go-darwin-linux-no-cgo-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  go-darwin-linux-no-cgo-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-darwin-linux-no-cgo' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-no-cgo-cache_key.txt" }}
      - *docker-load
      - *docker-publish

  go-darwin-linux-no-cgo-docker-rpm-fpm:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo "go-darwin-linux-no-cgo-$CIRCLE_SHA1" > /tmp/go-darwin-linux-no-cgo-cache_key.txt
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-no-cgo-cache_key.txt" }}
      - *docker-load
      - run: echo 'export IMAGE=go-darwin-linux-no-cgo-docker-rpm-fpm' >> $BASH_ENV
      - *custom-build-num
      - *run-docker-gen
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/go-darwin-linux-no-cgo-docker-rpm-fpm-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  go-darwin-linux-no-cgo-docker-rpm-fpm-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-darwin-linux-no-cgo-docker-rpm-fpm' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-darwin-linux-no-cgo-docker-rpm-fpm-cache_key.txt" }}
      - *docker-load
      - *docker-publish

  go-docker:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-docker' >> $BASH_ENV
      - *custom-build-num
      - *run-docker-gen
      - *docker-save
      - *create-cache-key
      - save_cache:
          key: docker-image-{{ checksum "/tmp/go-docker-cache_key.txt" }}
          paths:
            - /tmp/docker-cache/docker-images.tar
  go-docker-publish:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: echo 'export IMAGE=go-docker' >> $BASH_ENV
      - *custom-build-num
      - *create-cache-key
      - restore_cache:
          keys:
            - docker-image-{{ checksum "/tmp/go-docker-cache_key.txt" }}
      - *docker-load
      - *docker-publish

workflows:
  version: 2
  build-publish:
    jobs:
      - alpine-go
      - alpine-go-publish:
          requires:
            - alpine-go
          filters:
            branches:
              only: /^master$/

      - brew-go
      - brew-go-publish:
          requires:
            - brew-go
          filters:
            branches:
              only: /^master$/

      - go-darwin-linux
      - go-darwin-linux-publish:
          requires:
            - go-darwin-linux
          filters:
            branches:
              only: /^master$/

      - go-darwin-linux-docker-bsdtar-unzip:
          requires:
            - go-darwin-linux
      - go-darwin-linux-docker-bsdtar-unzip-publish:
          requires:
            - go-darwin-linux-docker-bsdtar-unzip
          filters:
            branches:
              only: /^master$/

      - go-darwin-linux-docker-java-ruby-netcat:
          requires:
            - go-darwin-linux
      - go-darwin-linux-docker-java-ruby-netcat-publish:
          requires:
            - go-darwin-linux-docker-java-ruby-netcat
          filters:
            branches:
              only: /^master$/

      - go-darwin-linux-no-cgo
      - go-darwin-linux-no-cgo-publish:
          requires:
            - go-darwin-linux-no-cgo
          filters:
            branches:
              only: /^master$/

      - go-darwin-linux-no-cgo-docker-rpm-fpm:
          requires:
            - go-darwin-linux-no-cgo
      - go-darwin-linux-no-cgo-docker-rpm-fpm-publish:
          requires:
            - go-darwin-linux-no-cgo-docker-rpm-fpm
          filters:
            branches:
              only: /^master$/

      - go-docker
      - go-docker-publish:
          requires:
            - go-docker
          filters:
            branches:
              only: /^master$/
